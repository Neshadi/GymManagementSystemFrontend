// import React, { useState, useRef } from 'react';
// import axios from 'axios';
// import jsPDF from 'jspdf';
// import html2canvas from 'html2canvas';

// const BookDemo = () => {
//   const [fullName, setName] = useState('');
//   const [email, setEmail] = useState('');
//   const [selectedDate, setSelectedDate] = useState('');
//   const [selectedTime, setSelectedTime] = useState('');
//   const [selectedDemo, setSelectedDemo] = useState('');
//   const [message, setMessage] = useState('');
//   const [isHovered, setIsHovered] = useState(false);
//   const [isClicked, setIsClicked] = useState(false);
//   const [isClicked1, setIsClicked1] = useState(false);
//   const [showDemoList, setShowDemoList] = useState(false);
//   const [searchQuery, setSearchQuery] = useState('');
//   const [searchResults, setSearchResults] = useState([]);
//   const [editing, setEditing] = useState(false);
//   const [deleting, setDeleting] = useState(false);
//   const [showSearch, setShowSearch] = useState(false);
    
//   const demoInputRef = useRef(null);
  
//   const demos = [
//     { 
//       name: 'John Smith',
//       price:'$15/hour' 
//     },
//     { 
//       name: 'Emily Johnson',
//       price:'$12/hour'  
//     },
//     { 
//       name: 'Michael Davis',
//       price:'$18/hour'  
//     },
//     { 
//       name: 'Jessica Brown',
//       price:'$10/hour'  
//     },
//     { 
//       name: 'Alexandra Martinez',
//       price:'$15/hour'  
//     },
//     { 
//       name: 'Daniel Garcia',
//       price:'$20/hour'  
//     },
//   ];

//   const times = [
//     '08:00', '10:00', '12:00', '14:00', '16:00', '18:00', '20:00'
//   ];

//   const user = { fullName, email, selectedDate, selectedTime, selectedDemo };

//   const handleSubmit = async () => {
//     try {
//       const response = await axios.post("http://localhost:8080/demo/book", user, {
//         headers: {
//           "Content-Type": "application/json"
//         }
//       });

//       if (response.status === 200) {
//         setMessage('Demo booked successfully!');
//         generatePDF();
//       } else {
//         setMessage('Failed to book demo. Please try again.');
//       }
//     } catch (error) {
//       console.error('Error booking demo:', error);
//       setMessage('An error occurred. Please try again later.');
//     }
//   };

//   const handleBook = (event) => {
//     event.preventDefault();
//     handleDemo(); 
//   };

//   const handleDemo = async () => {
//     try {
//       const response = await axios.get('http://localhost:8080/demo/findBook');
//       const demolists = response.data;
//       const demolist = demolists.find((demolist) => demolist.selectedDemo === selectedDemo && demolist.selectedDate === selectedDate && demolist.selectedTime === selectedTime);
//       if (demolist && selectedDemo && selectedDate && selectedTime) {
//         setMessage('Sorry. Demo has been booked already');
//       } else if(fullName && selectedDate && selectedTime && selectedDemo){
//         handleSubmit();
//       } else {
//         setMessage('Please fill out all the fields');
//       }
//     } catch (error) {
//       console.error('Error fetching users:', error);
//       setMessage('An error occurred. Please try again later.');
//     }
//   };

//   const generatePDF = async () => {
//     const doc = new jsPDF();
//     const input = document.getElementById('demo');

//     await html2canvas(input).then((canvas) => {
//       const imgData = canvas.toDataURL('image/png');
//       const imgWidth = 190;
//       const pageHeight = 290;
//       const imgHeight = canvas.height * imgWidth / canvas.width;
//       let heightLeft = imgHeight;

//       doc.addImage(imgData, 'PNG', 10, 10, imgWidth, imgHeight);
//       heightLeft -= pageHeight;

//       while (heightLeft >= 0) {
//         doc.addPage();
//         doc.addImage(imgData, 'PNG', 10, 10, imgWidth, imgHeight);
//         heightLeft -= pageHeight;
//       }

//       doc.save(`${fullName}_Booking_Demo.pdf`);
//     });
//   };

//   const handleSelectDemo = (demo) => {
//     setSelectedDemo(demo.name);
//     setShowDemoList(false);
//   };

//   const handleBlur = (e) => {
//     if (e.relatedTarget !== null && e.relatedTarget.parentNode === demoInputRef.current) {
//       return;
//     }
//     setShowDemoList(false);
//   };

//   // Other functions (editBook, deleteBook, handleSelectSearchResult, handleUpdate, handleUpdate1, handleDelete, handleDelete1)...

//   return (
//     <div style={{ maxWidth: '400px', margin: '0 auto', padding: '20px' }} id='demo'>
//       <h1>Book a Demo</h1>
//       <form onSubmit={handleSubmit}>
//         <div style={{ marginBottom: '10px' }}>
//           <label htmlFor="name" style={{ textAlign: 'left', display: 'block' }}>Name:</label>
//           <input
//             type="text"
//             id="name"
//             name="name"
//             value={fullName}
//             onChange={(e) => setName(e.target.value)}
//             required
//             style={{ width: '100%', padding: '8px', marginTop: '4px' }}
//           />
//         </div>
//         <div style={{ marginBottom: '10px' }}>
//           <label htmlFor="email" style={{ textAlign: 'left', display: 'block' }}>Email:</label>
//           <input
//             type="email"
//             id="email"
//             name="email"
//             value={email}
//             onChange={(e) => setEmail(e.target.value)}
//             required
//             style={{ width: '100%', padding: '8px', marginTop: '4px' }}
//           />
//         </div>
//         <div style={{ marginBottom: '10px' }}>
//           <label htmlFor="date" style={{ textAlign: 'left', display: 'block' }}>Select Date:</label>
//           <input
//             type="date"
//             id="date"
//             name="date"
//             value={selectedDate}
//             onChange={(e) => setSelectedDate(e.target.value)}
//             required
//             style={{ width: '100%', padding: '8px', marginTop: '4px' }}
//           />
//         </div>
//         <div style={{ marginBottom: '10px', width: '103%' }}>
//           <label htmlFor="time" style={{ textAlign: 'left', display: 'block' }}>Select Time:</label>
//           <select
//             id="time"
//             name="time"
//             value={selectedTime}
//             onChange={(e) => setSelectedTime(e.target.value)}
//             required
//             style={{ width: '102%', padding: '8px', marginTop: '4px' }}
//           >
//             <option value="" disabled>Select time</option>
//             {times.map((time, index) => (
//               <option key={index} value={time}>
//                 {time}
//               </option>
//             ))}
//           </select>
//         </div>
//         <div style={{ marginBottom: '10px', position: 'relative' }}>
//           <label htmlFor="demo" style={{ textAlign: 'left', display: 'block' }}>Select Demo:</label>
//           <input
//             type="text"
//             id="demo"
//             name="demo"
//             value={selectedDemo}
//             onFocus={() => setShowDemoList(true)}
//             onBlur={handleBlur}
//             onChange={(e) => setSelectedDemo(e.target.value)}
//             required
//             style={{ width: '100%', padding: '8px', marginTop: '4px' }}
//           />
//           {showDemoList && (
//             <div ref={demoInputRef} style={{ position: 'absolute', top: '100%', left: 0, right: 0, border: '1px solid #ccc', borderRadius: '4px', maxHeight: '150px', overflowY: 'auto', backgroundColor: 'black', zIndex: 1 }}>
//               {demos.map((demo, index) => (
//                 <div key={index} tabIndex="0" style={{ padding: '8px', cursor: 'pointer', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }} onMouseDown={() => handleSelectDemo(demo)}>
//                   <h5 style={{ margin: '0 8px 0 0' }}>{demo.name}</h5>
//                   <h5 style={{ margin: 0 }}>{demo.price}</h5>
//                 </div>
//               ))}
//             </div>
//           )}
//         </div>
//         <button type="submit" onClick={handleBook} style={{ width: '100%', padding: '10px', backgroundColor: '#1E90FF', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }} onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)} onMouseDown={() => setIsClicked(true)} onMouseUp={() => setIsClicked(false)}>
//           {isClicked ? 'Clicked!' : isHovered ? 'Release to Submit' : 'Book Demo'}
//         </button>
//         {message && <p>{message}</p>}
//       </form>
//       {editing && (
//         <div>
//           <form onSubmit={handleUpdate}>
//             <input
//               type="text"
//               placeholder="Full Name"
//               value={fullName}
//               onChange={(e) => setName(e.target.value)}
//             />
//             <input
//               type="email"
//               placeholder="Email"
//               value={email}
//               onChange={(e) => setEmail(e.target.value)}
//             />
//             <button type="submit">Update</button>
//             <button type="button" onClick={() => setEditing(false)}>Cancel</button>
//           </form>
//         </div>
//       )}
//       {deleting && (
//         <div>
//           <form onSubmit={handleDelete}>
//             <input
//               type="text"
//               placeholder="Full Name"
//               value={fullName}
//               onChange={(e) => setName(e.target.value)}
//             />
//             <button type="submit">Delete</button>
//             <button type="button" onClick={() => setDeleting(false)}>Cancel</button>
//           </form>
//         </div>
//       )}
//     </div>
//   );
// };

// export default BookDemo;
